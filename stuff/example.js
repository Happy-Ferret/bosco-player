// Generated by CoffeeScript 1.11.1
(function() {
  var Gtk, Lang, ListBoxRowWithData, ListBoxWindow, win;

  Gtk = imports.gi.Gtk;

  Lang = imports.lang;

  ListBoxRowWithData = (function() {
    function ListBoxRowWithData(data) {
      this.gob = new Gtk.ListBoxRow();
      this.gob.data = data;
      this.gob.add(new Gtk.Label({
        label: data
      }));
    }

    return ListBoxRowWithData;

  })();

  ListBoxWindow = (function() {
    function ListBoxWindow() {
      var box_outer, check, combo, filterFunc, hbox, items, label, label1, label2, listbox, listbox2, row, sortFunc, swtch, vbox;
      this.gob = new Gtk.Window({
        title: "ListBox Demo"
      });
      this.border_width = 10;
      box_outer = new Gtk.Box({
        orientation: Gtk.Orientation.VERTICAL,
        spacing: 6
      });
      this.gob.add(box_outer);
      listbox = new Gtk.ListBox();
      listbox.selection_mode = Gtk.SelectionMode.NONE;
      box_outer.pack_start(listbox, true, true, 0);
      row = new Gtk.ListBoxRow();
      hbox = new Gtk.Box({
        orientation: Gtk.Orientation.HORIZONTAL,
        spacing: 50
      });
      row.add(hbox);
      vbox = new Gtk.Box({
        orientation: Gtk.Orientation.VERTICAL
      });
      hbox.pack_start(vbox, true, true, 0);
      label1 = new Gtk.Label({
        label: "Automatic Date & Time",
        xalign: 0
      });
      label2 = new Gtk.Label({
        label: "Requires internet access",
        xalign: 0
      });
      vbox.pack_start(label1, true, true, 0);
      vbox.pack_start(label2, true, true, 0);
      swtch = new Gtk.Switch();
      swtch.valign = Gtk.Align.CENTER;
      hbox.pack_start(swtch, false, true, 0);
      listbox.add(row);
      row = new Gtk.ListBoxRow();
      hbox = new Gtk.Box({
        orientation: Gtk.Orientation.HORIZONTAL,
        spacing: 50
      });
      row.add(hbox);
      label = new Gtk.Label({
        label: "Enable Automatic Update",
        xalign: 0
      });
      check = new Gtk.CheckButton();
      hbox.pack_start(label, true, true, 0);
      hbox.pack_start(check, false, true, 0);
      listbox.add(row);
      row = new Gtk.ListBoxRow();
      hbox = new Gtk.Box({
        orientation: Gtk.Orientation.HORIZONTAL,
        spacing: 50
      });
      row.add(hbox);
      label = new Gtk.Label({
        label: "Date Format",
        xalign: 0
      });
      combo = new Gtk.ComboBoxText();
      combo.insert(0, "0", "24-hour");
      combo.insert(1, "1", "AM/PM");
      hbox.pack_start(label, true, true, 0);
      hbox.pack_start(combo, false, true, 0);
      listbox.add(row);
      listbox2 = new Gtk.ListBox();
      items = "This is a sorted ListBox Fail".split(' ');
      items.forEach((function(_this) {
        return function(item) {
          return listbox2.add(new ListBoxRowWithData(item).gob);
        };
      })(this));
      sortFunc = (function(_this) {
        return function(row1, row2, data, notifyDestroy) {
          return row1.data.toLowerCase() > row2.data.toLowerCase();
        };
      })(this);
      filterFunc = (function(_this) {
        return function(row, data, notifyDestroy) {
          return row.data !== 'Fail';
        };
      })(this);
      listbox2.set_sort_func(sortFunc, null, false);
      listbox2.set_filter_func(filterFunc, null, false);
      listbox2.connect("row-activated", (function(_this) {
        return function(widget, row) {
          return print(row.data);
        };
      })(this));
      box_outer.pack_start(listbox2, true, true, 0);
      listbox2.show_all();
    }

    return ListBoxWindow;

  })();

  Gtk.init(null);

  win = new ListBoxWindow();

  win.gob.connect("delete-event", Gtk.main_quit);

  win.gob.show_all();

  Gtk.main();

}).call(this);
